import example.ReplaceTagNameTask

plugins {
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "application"
    id "groovy"
    id "net.ltgt.apt-eclipse" version "0.21"
    id "net.ltgt.apt-idea" version "0.21"
    id "com.google.cloud.tools.jib" version "1.0.0-rc2"

}

version projectVersion
group "books"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots/"
        content {
            includeVersionByRegex('io\\.micronaut.*', '.*', '.*BUILD-SNAPSHOT')
        }
    }
}

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.1.0.RC1'
    }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    annotationProcessor "io.micronaut:micronaut-inject-java"
    annotationProcessor "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-inject"
    compile "io.micronaut:micronaut-validation"
    compile "io.micronaut:micronaut-runtime"
    compile "io.micronaut:micronaut-http-client"
    compile "io.micronaut:micronaut-http-server-netty"
    runtime "ch.qos.logback:logback-classic:1.2.3"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java"
    compile "io.micronaut:micronaut-management"
    testCompile("org.spockframework:spock-core:$spockVersion") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    runtime "io.micronaut.configuration:micronaut-kubernetes-discovery-client:$micronautKubernetesDiscoveryClientVersion"

}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
test.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1')

mainClassName = "books.Application"
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}


task copyCloudBuildDeploy(type: Copy) {
    from file("$projectDir/cloudbuild-deploy.yaml")
    into buildDir
}

task replaceTagNameWithProjectVersion(type: ReplaceTagNameTask) {
    dependsOn 'copyCloudBuildDeploy'
}

run {
    systemProperty "micronaut.environments", System.getProperty('micronaut.environments')
}
